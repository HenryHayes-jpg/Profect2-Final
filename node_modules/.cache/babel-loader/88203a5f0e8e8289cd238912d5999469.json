{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\AAA\\\\Desktop\\\\CMPG 323\\\\react-upload-download-files\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\AAA\\\\Desktop\\\\CMPG 323\\\\react-upload-download-files\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\AAA\\\\Desktop\\\\CMPG 323\\\\react-upload-download-files\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\AAA\\\\Desktop\\\\CMPG 323\\\\react-upload-download-files\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\AAA\\\\Desktop\\\\CMPG 323\\\\react-upload-download-files\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import Dropzone from'react-dropzone';import axios from'axios';import{Form,Row,Col,Button}from'react-bootstrap';import{API_URL}from'../utils/constants';var App=function App(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),file=_useState2[0],setFile=_useState2[1];// state for storing actual image\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),previewSrc=_useState4[0],setPreviewSrc=_useState4[1];// state for storing previewImage\nvar _useState5=useState({title:'',description:''}),_useState6=_slicedToArray(_useState5,2),state=_useState6[0],setState=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),errorMsg=_useState8[0],setErrorMsg=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isPreviewAvailable=_useState10[0],setIsPreviewAvailable=_useState10[1];// state to show preview only for images\nvar dropRef=useRef();// React ref for managing the hover state of droppable area\nvar handleInputChange=function handleInputChange(event){setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},event.target.name,event.target.value)));};var onDrop=function onDrop(files){var _files=_slicedToArray(files,1),uploadedFile=_files[0];setFile(uploadedFile);var fileReader=new FileReader();fileReader.onload=function(){setPreviewSrc(fileReader.result);};fileReader.readAsDataURL(uploadedFile);setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));dropRef.current.style.border='2px dashed #e9ebeb';};var updateBorder=function updateBorder(dragState){if(dragState==='over'){dropRef.current.style.border='2px solid #000';}else if(dragState==='leave'){dropRef.current.style.border='2px dashed #e9ebeb';}};var handleOnSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var title,description,formData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_context.prev=1;title=state.title,description=state.description;if(!(title.trim()!==''&&description.trim()!=='')){_context.next=18;break;}if(!file){_context.next=15;break;}formData=new FormData();formData.append('file',file);formData.append('title',title);formData.append('description',description);setErrorMsg('');_context.next=12;return axios.post(\"\".concat(API_URL,\"/upload\"),formData,{headers:{'Content-Type':'multipart/form-data'}});case 12:props.history.push('/list');_context.next=16;break;case 15:setErrorMsg('Please select a file to add.');case 16:_context.next=19;break;case 18:setErrorMsg('Please enter all the field values.');case 19:_context.next=24;break;case 21:_context.prev=21;_context.t0=_context[\"catch\"](1);_context.t0.response&&setErrorMsg(_context.t0.response.data);case 24:case\"end\":return _context.stop();}}},_callee,null,[[1,21]]);}));return function handleOnSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Form,{className:\"search-form\",onSubmit:handleOnSubmit},errorMsg&&/*#__PURE__*/React.createElement(\"p\",{className:\"errorMsg\"},errorMsg),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"title\"},/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",name:\"title\",value:state.title||'',placeholder:\"Enter title\",onChange:handleInputChange})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"description\"},/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",name:\"description\",value:state.description||'',placeholder:\"Enter description\",onChange:handleInputChange})))),/*#__PURE__*/React.createElement(\"div\",{className:\"upload-section\"},/*#__PURE__*/React.createElement(Dropzone,{onDrop:onDrop,onDragEnter:function onDragEnter(){return updateBorder('over');},onDragLeave:function onDragLeave(){return updateBorder('leave');}},function(_ref2){var getRootProps=_ref2.getRootProps,getInputProps=_ref2.getInputProps;return/*#__PURE__*/React.createElement(\"div\",Object.assign({},getRootProps({className:'drop-zone'}),{ref:dropRef}),/*#__PURE__*/React.createElement(\"input\",getInputProps()),/*#__PURE__*/React.createElement(\"p\",null,\"Drag and drop a file OR click here to select a file\"),file&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Selected file:\"),\" \",file.name));}),previewSrc?isPreviewAvailable?/*#__PURE__*/React.createElement(\"div\",{className:\"image-preview\"},/*#__PURE__*/React.createElement(\"img\",{className:\"preview-image\",src:previewSrc,alt:\"Preview\"})):/*#__PURE__*/React.createElement(\"div\",{className:\"preview-message\"},/*#__PURE__*/React.createElement(\"p\",null,\"No preview available for this file\")):/*#__PURE__*/React.createElement(\"div\",{className:\"preview-message\"},/*#__PURE__*/React.createElement(\"p\",null,\"Image preview will be shown here after selection\"))),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",type:\"submit\"},\"Submit\")));};export default App;","map":{"version":3,"sources":["C:/Users/AAA/Desktop/CMPG 323/react-upload-download-files/src/components/App.js"],"names":["React","useState","useRef","Dropzone","axios","Form","Row","Col","Button","API_URL","App","props","file","setFile","previewSrc","setPreviewSrc","title","description","state","setState","errorMsg","setErrorMsg","isPreviewAvailable","setIsPreviewAvailable","dropRef","handleInputChange","event","target","name","value","onDrop","files","uploadedFile","fileReader","FileReader","onload","result","readAsDataURL","match","current","style","border","updateBorder","dragState","handleOnSubmit","preventDefault","trim","formData","FormData","append","post","headers","history","push","response","data","getRootProps","getInputProps","className"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { API_URL } from '../utils/constants';\r\n\r\nconst App = (props) => {\r\n  const [file, setFile] = useState(null); // state for storing actual image\r\n  const [previewSrc, setPreviewSrc] = useState(''); // state for storing previewImage\r\n  const [state, setState] = useState({\r\n    title: '',\r\n    description: ''\r\n  });\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\r\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\r\n\r\n  const handleInputChange = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const onDrop = (files) => {\r\n    const [uploadedFile] = files;\r\n    setFile(uploadedFile);\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewSrc(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(uploadedFile);\r\n    setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\r\n    dropRef.current.style.border = '2px dashed #e9ebeb';\r\n  };\r\n\r\n  const updateBorder = (dragState) => {\r\n    if (dragState === 'over') {\r\n      dropRef.current.style.border = '2px solid #000';\r\n    } else if (dragState === 'leave') {\r\n      dropRef.current.style.border = '2px dashed #e9ebeb';\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { title, description } = state;\r\n      if (title.trim() !== '' && description.trim() !== '') {\r\n        if (file) {\r\n          const formData = new FormData();\r\n          formData.append('file', file);\r\n          formData.append('title', title);\r\n          formData.append('description', description);\r\n\r\n          setErrorMsg('');\r\n          await axios.post(`${API_URL}/upload`, formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          });\r\n          props.history.push('/list');\r\n        } else {\r\n          setErrorMsg('Please select a file to add.');\r\n        }\r\n      } else {\r\n        setErrorMsg('Please enter all the field values.');\r\n      }\r\n    } catch (error) {\r\n      error.response && setErrorMsg(error.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Form className=\"search-form\" onSubmit={handleOnSubmit}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={state.title || ''}\r\n                placeholder=\"Enter title\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"description\"\r\n                value={state.description || ''}\r\n                placeholder=\"Enter description\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"upload-section\">\r\n          <Dropzone\r\n            onDrop={onDrop}\r\n            onDragEnter={() => updateBorder('over')}\r\n            onDragLeave={() => updateBorder('leave')}\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div {...getRootProps({ className: 'drop-zone' })} ref={dropRef}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag and drop a file OR click here to select a file</p>\r\n                {file && (\r\n                  <div>\r\n                    <strong>Selected file:</strong> {file.name}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n          {previewSrc ? (\r\n            isPreviewAvailable ? (\r\n              <div className=\"image-preview\">\r\n                <img className=\"preview-image\" src={previewSrc} alt=\"Preview\" />\r\n              </div>\r\n            ) : (\r\n              <div className=\"preview-message\">\r\n                <p>No preview available for this file</p>\r\n              </div>\r\n            )\r\n          ) : (\r\n            <div className=\"preview-message\">\r\n              <p>Image preview will be shown here after selection</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}